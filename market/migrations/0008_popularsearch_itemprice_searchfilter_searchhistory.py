# Generated by Django 5.2.5 on 2025-08-10 21:24

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('market', '0007_useronlinestatus_liveactivity_notification'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PopularSearch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query', models.CharField(max_length=255, unique=True)),
                ('search_count', models.PositiveIntegerField(default=1)),
                ('last_searched', models.DateTimeField(auto_now=True)),
                ('daily_count', models.PositiveIntegerField(default=0)),
                ('weekly_count', models.PositiveIntegerField(default=0)),
                ('monthly_count', models.PositiveIntegerField(default=0)),
                ('related_categories', models.JSONField(default=list)),
                ('related_cities', models.JSONField(default=list)),
            ],
            options={
                'verbose_name': 'Popüler Arama',
                'verbose_name_plural': 'Popüler Aramalar',
                'ordering': ['-search_count', '-last_searched'],
            },
        ),
        migrations.CreateModel(
            name='ItemPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estimated_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('price_confidence', models.FloatField(default=0.0, help_text='Fiyat tahmini güven skoru (0-1)')),
                ('similar_items_avg', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('market_demand', models.CharField(choices=[('low', 'Düşük'), ('medium', 'Orta'), ('high', 'Yüksek'), ('very_high', 'Çok Yüksek')], default='medium', max_length=20)),
                ('condition_factor', models.FloatField(default=1.0)),
                ('age_factor', models.FloatField(default=1.0)),
                ('location_factor', models.FloatField(default=1.0)),
                ('demand_factor', models.FloatField(default=1.0)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='price_info', to='market.item')),
            ],
            options={
                'verbose_name': 'Ürün Fiyat Bilgisi',
                'verbose_name_plural': 'Ürün Fiyat Bilgileri',
            },
        ),
        migrations.CreateModel(
            name='SearchFilter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Filtre adı', max_length=100)),
                ('query', models.CharField(blank=True, help_text='Arama kelimesi', max_length=255)),
                ('categories', models.JSONField(default=list, help_text='Seçili kategoriler')),
                ('conditions', models.JSONField(default=list, help_text='Ürün durumları')),
                ('price_range', models.CharField(blank=True, choices=[('0-50', '0-50 TL'), ('50-100', '50-100 TL'), ('100-250', '100-250 TL'), ('250-500', '250-500 TL'), ('500-1000', '500-1000 TL'), ('1000+', '1000+ TL')], max_length=20)),
                ('min_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('max_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('district', models.CharField(blank=True, max_length=100)),
                ('distance_range', models.CharField(choices=[('5', '5 km içinde'), ('10', '10 km içinde'), ('25', '25 km içinde'), ('50', '50 km içinde'), ('100', '100 km içinde'), ('all', 'Tüm Türkiye')], default='all', max_length=10)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('date_from', models.DateField(blank=True, null=True)),
                ('date_to', models.DateField(blank=True, null=True)),
                ('has_image', models.BooleanField(default=False)),
                ('trade_type', models.CharField(blank=True, help_text='Takas türü tercihi', max_length=50)),
                ('exclude_own_items', models.BooleanField(default=True)),
                ('only_favorites', models.BooleanField(default=False)),
                ('sort_by', models.CharField(choices=[('newest', 'En Yeni'), ('oldest', 'En Eski'), ('name_asc', 'A-Z'), ('name_desc', 'Z-A'), ('price_asc', 'Ucuzdan Pahalıya'), ('price_desc', 'Pahalıdan Ucuza'), ('distance', 'Yakından Uzağa'), ('popularity', 'En Popüler'), ('match_score', 'En Uygun')], default='newest', max_length=20)),
                ('is_saved', models.BooleanField(default=False, help_text='Kaydedilmiş arama mı?')),
                ('is_default', models.BooleanField(default=False, help_text='Varsayılan filtre mi?')),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('last_used', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='search_filters', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Arama Filtresi',
                'verbose_name_plural': 'Arama Filtreleri',
                'ordering': ['-last_used'],
            },
        ),
        migrations.CreateModel(
            name='SearchHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query', models.CharField(max_length=255)),
                ('filters', models.JSONField(default=dict, help_text='Kullanılan filtreler')),
                ('results_count', models.PositiveIntegerField(default=0)),
                ('clicked_items', models.JSONField(default=list, help_text="Tıklanan ürün ID'leri")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='search_history', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Arama Geçmişi',
                'verbose_name_plural': 'Arama Geçmişleri',
                'ordering': ['-created_at'],
            },
        ),
    ]
